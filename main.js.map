{"version":3,"sources":["./src/app/temporary/temporary.component.ts","./src/app/temporary/temporary.component.html","./src/app/admin/admin-navbar/admin-navbar.component.ts","./src/app/admin/admin-navbar/admin-navbar.component.html","./src/app/admin/admin-dash-board/add-shop/add-shop.component.ts","./src/app/admin/admin-dash-board/add-shop/add-shop.component.html","./src/app/main-header/main-header.component.ts","./src/app/main-header/main-header.component.html","./src/app/admin/admin-dash-board/admin-dash-board.component.ts","./src/app/admin/admin-dash-board/admin-dash-board.component.html","./src/app/salons-dashboard/my-bookings/my-bookings.component.html","./src/app/salons-dashboard/my-bookings/my-bookings.component.ts","./src/app/services/admin.service.ts","./src/app/admin/admin-dash-board/add-slot/add-slot.component.html","./src/app/admin/admin-dash-board/add-slot/add-slot.component.ts","./src/environments/environment.ts","./src/app/salons-dashboard/shops/shops.component.html","./src/app/salons-dashboard/shops/shops.component.ts","./src/app/Authentication/login/login.component.ts","./src/app/Authentication/login/login.component.html","./src/app/admin/admin-login/admin-login.component.ts","./src/app/admin/admin-login/admin-login.component.html","./src/app/banner/banner.component.ts","./src/app/banner/banner.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/classes/user.ts","./src/app/session-header/session-header.component.ts","./src/app/session-header/session-header.component.html","./src/app/app.module.ts","./src/app/admin/admin-dash-board/add-service/add-service.component.html","./src/app/admin/admin-dash-board/add-service/add-service.component.ts","./src/app/admin/admin-dash-board/generate-slot/generate-slot.component.ts","./src/app/admin/admin-dash-board/generate-slot/generate-slot.component.html","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/admin/admin-dash-board/bookings/bookings.component.html","./src/app/admin/admin-dash-board/bookings/bookings.component.ts","./src/app/Authentication/register/register.component.ts","./src/app/Authentication/register/register.component.html","./src/app/salons-dashboard/salons-dashboard.component.ts","./src/app/salons-dashboard/salons-dashboard.component.html","./src/app/models/booking.model.ts","./src/app/services/user.service.ts","./src/app/app-routing.module.ts","./src/app/salons-dashboard/book-slot/book-slot.component.ts","./src/app/salons-dashboard/book-slot/book-slot.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-temporary',\n  templateUrl: './temporary.component.html',\n  styleUrls: ['./temporary.component.css']\n})\nexport class TemporaryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>temporary works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-navbar',\n  templateUrl: './admin-navbar.component.html',\n  styleUrls: ['./admin-navbar.component.css']\n})\nexport class AdminNavbarComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  logout(){\n    sessionStorage.clear();\n    this.router.navigate(['adminLogin']);\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark\">\n    <a class=\"navbar-brand\" routerLink=\"/admin\" style=\"color: #3E1A6A;font-weight: bolder;\">Admin</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" routerLink=\"/admin/bookings\" >Bookings</a>\n       </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link active\" routerLink=\"/admin/addShop\" >Add Shop</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link active\" routerLink=\"/admin/addService\" >Add Service</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link active\" routerLink=\"/admin/addSlot\" >Add Slot</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" routerLink=\"/admin/generateSlot\" >Generate Slot</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" routerLink=\"/\" (click) = \"logout()\">Logout</a>\n        </li>\n      </ul>\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-add-shop',\n  templateUrl: './add-shop.component.html',\n  styleUrls: ['./add-shop.component.css']\n})\nexport class AddShopComponent implements OnInit {\n  form = new FormGroup({\n    shopName : new FormControl('',Validators.required),\n    shopAddress : new FormControl('',Validators.required),\n    shopImage : new FormControl('',Validators.required)\n  })\n  constructor(private adminService : AdminService,private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n      this.adminService.addShop(this.form.value).subscribe(data =>{\n          alert(\"Shop Added SuccessFully\");\n      },\n      err =>{\n        alert(\"Somehting Went Wrong In our Side\");\n      });\n  }\n}\n","<h3 style=\"text-align: center; color: #3E1A6A;\">Shop</h3>\n<form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\n    <label>\n      <p class=\"label-txt\">Enter Shop Name</p>\n      <input type=\"text\" class=\"input\" formControlName = \"shopName\" required=\"required\">\n      <div class=\"line-box\">\n        <div class=\"line\"></div>\n      </div>\n    </label>\n    <label>\n      <p class=\"label-txt\">Enter Shop Address</p>\n      <input type=\"text\" formControlName = \"shopAddress\" class=\"input\" required = \"required\"> \n      <div class=\"line-box\">\n        <div class=\"line\"></div>\n      </div>\n    </label>\n    <label>\n        <p class=\"label-txt\">Enter Shop Image URL</p>\n        <input type=\"text\" formControlName = \"shopImage\" class=\"input\" required = \"required\"> \n        <div class=\"line-box\">\n          <div class=\"line\"></div>\n        </div>\n      </label>\n    <button type=\"submit\">Add</button>\n    <br><br><br><br><br><br><br>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-main-header',\n  templateUrl: './main-header.component.html',\n  styleUrls: ['./main-header.component.css']\n})\nexport class MainHeaderComponent implements OnInit {\n\n  public home : boolean = true;\n  public login : boolean = false;\n  public signup : boolean = false;\n\n  constructor(private router : Router) {\n   }\n\n  ngOnInit(): void {\n  }\n\n  public adminLoginActivator(){\n    this.router.navigate(['admin']);\n  }\n\n  public loginActivator(){\n      this.login = true;\n      this.home = false;\n      this.signup = false;\n      this.router.navigate(['/login']);\n  }\n\n  public homeActivator(){\n    this.login = false;\n    this.home = true;\n    this.signup = false;\n}\npublic signupActivator(){\n  this.login = false;\n  this.home = false;\n  this.signup = true;\n}\n\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark\" style=\"background-color: black;\">\n    <a class=\"navbar-brand\" routerLink=\"/\">\n        <img src=\"https://cdn0.iconfinder.com/data/icons/barber-shop-19/64/haircut_barber_hairstyle_salon_scissors_man-512.png\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\n        Esalon\n      </a>\n    <!--<a class=\"navbar-brand\" routerLink=\"\">Navbar</a>-->\n\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav ml-auto\">\n        <!--<li class=\"nav-item\">\n          <a class=\"nav-link\" [class.active] = \"home\" routerLink=\"/\" (click)=\"homeActivator()\">Home <span class=\"sr-only\">(current)</span></a>\n        </li>-->\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\"  (click)=\"adminLoginActivator()\" routerLink=\"/adminLogin\">AdminLogin</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\"  (click)=\"loginActivator()\" routerLink=\"/login\">Login</a>\n        </li>\n        <!--\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/signup\" (click) = \"signupActivator()\" [class.active] = \"signup\">Signup</a>\n        </li>-->\n        <!--<li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Dropdown\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n            <a class=\"dropdown-item\" href=\"#\">Action</a>\n            <a class=\"dropdown-item\" href=\"#\">Another action</a>\n            <div class=\"dropdown-divider\"></div>\n            <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n          </div>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link disabled\" href=\"#\">Disabled</a>\n        </li>-->\n      </ul>\n      <!--<form class=\"form-inline my-2 my-lg-0\">\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n        <button class=\"btn btn-outline-light my-2 my-sm-0\" type=\"submit\">Search</button>\n      </form>-->\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-dash-board',\n  templateUrl: './admin-dash-board.component.html',\n  styleUrls: ['./admin-dash-board.component.css']\n})\nexport class AdminDashBoardComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n    this.checkSession();\n  }\n\n  checkSession(){\n    if(sessionStorage.getItem(\"admin\") == null){\n      this.router.navigate(['/adminLogin']);\n    }\n  }\n}\n","<div style=\"background-image: url(assets/bg1.png); background-size: cover; height: 100%;\">\n    <app-admin-navbar></app-admin-navbar>\n    <router-outlet></router-outlet>\n</div> ","<div style=\"background-color: white;\">\n    <div class=\"container\" style=\"padding: 10px;\">\n    <table class=\"table\">\n        <thead class=\"thead-dark\">\n          <tr>\n            <th scope=\"col\">BookingId</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Shop Name</th>\n            <th scope=\"col\">Date</th>\n            <th scope=\"col\">Time</th>\n            <th scope=\"col\">Services</th>\n            <th scope=\"col\">Amount</th>\n          </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let booking of book\">\n                <td> {{booking._id}}</td>\n                <td>{{booking.userEmail}}</td>\n                <td >{{booking.shopName}}</td>\n                <td>{{booking.date}}</td>\n                <td>{{booking.time}}</td>\n                <td>\n                <p *ngFor=\"let s of booking.service\">{{s}}</p></td>\n                <td>₹ {{booking.totalCost}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Booking } from 'src/app/models/booking.model';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-my-bookings',\n  templateUrl: './my-bookings.component.html',\n  styleUrls: ['./my-bookings.component.css']\n})\nexport class MyBookingsComponent implements OnInit {\n\n  book : Booking[];\n\n  constructor(private userService : UserService) { }\n\n  ngOnInit(): void {\n    this.fetchBookings();\n  }\n\n  fetchBookings(){\n    var user = JSON.parse(JSON.stringify({\"userEmail\" : sessionStorage.getItem(\"email\")}))\n    this.userService.fetchBookings(user).subscribe(data=>{\n        this.book = data;\n    },err=>{\n        console.log();\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {User} from '../classes/user';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private http : HttpClient) { }\n\n  serverUrl = \"http://18.119.13.221:7000/admin\";\n\n  public adminLogin(adminDetails : any):Observable<any>{\n    return this.http.post<any>(this.serverUrl+\"/adminLogin\",adminDetails);\n  }\n  public addShop(shopDetails : any):Observable<any>{\n    return this.http.post<any>(this.serverUrl + \"/addShop\",shopDetails);\n  }\n  public getShops():Observable<any>{\n    return this.http.get<any>(this.serverUrl + \"/getShops\");\n  }\n  public sendService(serviceDetails : any):Observable<any>{\n    return this.http.put(this.serverUrl + \"/updateServices\",serviceDetails);\n  }\n  public sendSlot(slotDetails : any):Observable<any>{\n    console.log(slotDetails)\n    return this.http.put(this.serverUrl + \"/addSlot\",slotDetails);\n  }\n  public generateSlot(slotDetails : any):Observable<any>{\n    console.log(slotDetails)\n    return this.http.post(this.serverUrl + \"/generateSlot\",slotDetails);\n  }\n  public fetchBookings():Observable<any>{\n    return this.http.get(this.serverUrl + \"/getBooking\");\n  }\n}\n","<h3 style=\"text-align: center; color: #3E1A6A;\">Add Slot</h3>\n<form name=\"form\" (ngSubmit) = \"onSubmit()\">\n    <label for=\"shopId\" style=\"font-weight: bold;\">Select Shop</label>\n            <select class=\"form-control\"  [(ngModel)]=\"slotDetails._id\" name=\"shopId\" id=\"shopName\">\n                <option *ngFor='let shop of shops' value=\"{{shop._id}}\">{{shop.shopName}}</option>                                  \n            </select>\n\n        <label>\n      <p class=\"label-txt\">Enter Slot</p>\n\n      <input type=\"text\" [(ngModel)] = \"slotDetails.slot\" name = \"service\" id = \"service\" class=\"input\" required = \"required\" autocomplete=\"off\"> \n      <div class=\"line-box\">\n        <div class=\"line\"></div>\n      </div>\n      </label>\n    <button type=\"submit\">Add</button>\n    <br><br><br><br><br><br><br><br><br>\n  </form>","import { Component, Input, OnInit } from '@angular/core';\nimport { Shop } from 'src/app/models/shop.model';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-add-slot',\n  templateUrl: './add-slot.component.html',\n  styleUrls: ['./add-slot.component.css']\n})\nexport class AddSlotComponent implements OnInit {\n\n  constructor(private adminService : AdminService) { }\n\n  ngOnInit(): void {\n    this.fetchShops();\n  }\n\n  shops : Shop[] | undefined;\n  @Input() slotDetails = {\n    '_id' : '',\n    'slot' : ''\n  }\n\n  fetchShops(){\n    this.adminService.getShops().subscribe(data => {\n        this.shops = data;\n    },\n    err =>{\n\n    })\n  }\n\n  onSubmit(){\n      console.log(this.slotDetails);\n      this.adminService.sendSlot(this.slotDetails).subscribe(data =>{\n        alert(\"Slot Added Successfully\");\n      } , err => {\n        alert(\"Something Went Wrong.\");\n      });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-sm-4\" style=\"padding-top:30px\" *ngFor = \"let shop of shops\">\n          <div class=\"card\">\n            <div class=\"row\">\n              <div class=\"col-sm-4\">\n                <img src={{shop.shopImage}} class=\"rounded float-left\" width=\"100px\" height=\"150px\"alt=\"...\">\n              </div>\n           <div class=\"col-sm-8\">\n            <div class=\"card-body text-center\">\n              <h5 class=\"card-title\">{{shop.shopName}}</h5>\n              <p class=\"card-text\">{{shop.shopAddress}}</p>\n              <a class=\"btn btn-dark\" routerLink=\"/salons/bookSlot/{{shop._id}}\">Book Now</a>\n            </div>\n          </div>\n        </div>  \n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Shop } from 'src/app/models/shop.model';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-shops',\n  templateUrl: './shops.component.html',\n  styleUrls: ['./shops.component.css']\n})\nexport class ShopsComponent implements OnInit {\n\n  constructor(private userService : UserService) { }\n\n  shops : Shop[] | undefined;\n  name !: string;\n  ngOnInit(): void {\n    this.loadShops();\n  }\n\n  public loadShops(){\n      this.userService.getShops().subscribe(data=>{\n          console.log(data);\n          this.shops = data;\n      },err => {\n        console.log(err);\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/classes/user';\nimport { UserService } from 'src/app/services/user.service';\nimport {NgForm} from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user = new User();\n  constructor(private serviceObject : UserService,private router : Router) { }\n\n  ngOnInit(): void {\n    this.checkSession();\n  }\n\n  login(){\n    console.log(this.user);\n    this.serviceObject.loginService(this.user).subscribe(\n      data => {\n        alert(\"Login SuccessFull\");\n        this.storeLogin(this.user.userEmail);\n        this.router.navigate(['/salons']);\n      },\n      err => {\n        alert(\"Invalid Login\");\n      }\n      );\n  }\n  public storeLogin(email:string){\n    sessionStorage.setItem(\"email\",email);\n  }\n  public checkSession(){\n    if(sessionStorage.getItem(\"email\") != null){\n      this.router.navigate(['']);\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n    <div class=\"forms-container\">\n      <div class=\"signin-signup\">\n        <form #loginForm = \"ngForm\" class=\"sign-in-form\" (ngSubmit) = \"login()\">\n          <h2 class=\"title\">Sign in</h2>\n          <div class=\"input-field\">\n            <i class=\"fas fa-user\"></i>\n            <input autocomplete=\"off\" type=\"email\" placeholder=\"Username\" [(ngModel)] = \"user.userEmail\" name = \"userName\" #username = \"ngModel\" [class.is-invalid] = \"username.touched\" required pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"/>\n          </div>\n          <small class=\"text-danger\" [class.d-none] = \" username.valid || username.untouched\">Valid Email Required</small>\n          <div class=\"input-field\">\n            <i class=\"fas fa-lock\"></i>\n            <input type=\"password\" placeholder=\"Password\" [(ngModel)] = \"user.userPassword\" name=\"password\" #password = \"ngModel\" required pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,20}$\" />\n          </div>\n          <small class=\"text-danger\" [class.d-none] = \" password.valid || password.untouched\">It must be of Length 8 containing uppercase,lowercase,number and a symbol</small>\n          <input type=\"submit\" value=\"Login\" [disabled] = \"!loginForm.valid\" class=\"btn solid\" />\n          <p class=\"social-text\">Or Sign in with</p>\n          <div class=\"social-media\">\n            <a href=\"#\" class=\"social-icon\">\n              <i class=\"fab fa-google\"></i>\n            </a>\n            <!--<a href=\"#\" class=\"social-icon\">\n              <i class=\"fab fa-facebook-f\"></i>\n            </a>\n            <a href=\"#\" class=\"social-icon\">\n              <i class=\"fab fa-twitter\"></i>\n            </a>\n            <a href=\"#\" class=\"social-icon\">\n              <i class=\"fab fa-linkedin-in\"></i>\n            </a>-->\n          </div>\n        </form>\n        \n      </div>\n    </div>\n    \n    <div class=\"panels-container\">\n      <div class=\"panel left-panel\">\n        <div class=\"content\">\n          <h3>New here ?</h3>\n          <p>\n            Nothing to worry , Just Click Below to Create an Account\n          </p>\n          <button class=\"btn transparent\" id=\"sign-up-btn\" routerLink=\"/signup\">\n            Sign up\n          </button>\n        </div>\n       <!-- <img src=\"img/log.svg\" class=\"image\" alt=\"\" /> -->\n      </div>\n    </div>\n    </div>\n    ","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent implements OnInit {\n\n  form = new FormGroup({\n    adminId : new FormControl('',Validators.required),\n    adminPassword : new FormControl('',Validators.required)\n  })\n\n  constructor(private router : Router,private adminService : AdminService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    this.adminService.adminLogin(this.form.value).subscribe(data => {\n      console.log(\"loginSuccessFull\");\n      sessionStorage.setItem(\"admin\",data.adminId);\n      alert(\"Login Success Full\");\n      this.router.navigate(['/admin']);\n    },\n    err =>{\n      console.log(\"Login Failed\");\n      alert(\"Login Failed\");\n    });\n  }\n}\n","<div class=\"login-form\" style=\"background-image: url(assets/bg2.png); background-repeat: no-repeat; background-size:inherit;\">\n  <h3 style=\"text-align: center; color: #3E1A6A; margin-top: 5%;\">Admin Login</h3>\n    <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\n      <label>\n        <p class=\"label-txt\">Enter AdminId</p>\n        <input type=\"text\" class=\"input\" formControlName = \"adminId\" required=\"required\">\n\n        <div class=\"line-box\">\n          <div class=\"line\"></div>\n        </div>\n\n      </label>\n\n      <label>\n        <p class=\"label-txt\">Enter Password</p>\n  \n        <input type=\"password\" class=\"input\" formControlName = \"adminPassword\" required=\"required\">\n        \n        <div class=\"line-box\">\n          <div class=\"line\"></div>\n        </div>\n\n      </label>\n      <button type=\"submit\">Login</button>        \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.css']\n})\nexport class BannerComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  checkSession(){\n    if(sessionStorage.getItem(\"email\") == null){\n      this.router.navigate(['login']);\n    }\n    else{\n      this.router.navigate(['salons']);\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"row d-flex justify-content-center\" style=\"height: 70vh;\">\n    <div class=\"col-md-6 d-flex justify-content-center p-0 align-items-center flex-column\">\n        <h1><b>Don't wait in Queue...</b></h1>\n        <h2>Book Your Slot Now!!</h2>\n        <br>\n        <div class=\"\">\n            <!-- <input class=\"getquote\" type=\"text\" placeholder=\"Parking Slot\"> -->\n            <button class=\"btn btn-dark\" (click)='checkSession()'>Book Now</button>\n        </div>\n    </div>\n    <div class=\"col-md-6 d-flex justify-content-center align-items-center\">\n        <div>\n            <img  src=\"assets/saloon.jpg\" alt=\"\">\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'eSalon';\n}\n","<router-outlet></router-outlet>\n","export class User {\n    userName!: string;\n    userEmail!: string;\n    userPassword!: string;\n    userMobileNum!: string;\n    User(){}\n    /*User( userName : string,userEmail : string,userPassword : string,userMobileNum : string){\n            this.userName = userName;\n            this.userEmail = userEmail;\n            this.userPassword = userPassword;\n            this.userMobileNum = userMobileNum;\n    }*/\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-session-header',\n  templateUrl: './session-header.component.html',\n  styleUrls: ['./session-header.component.css']\n})\nexport class SessionHeaderComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  endSession(){\n    sessionStorage.clear();\n    this.router.navigate(['']);\n  }\n\n  navigateToSalons(){\n    this.router.navigate(['salons']);\n  }\n\n  navigateToMyBookings(){\n    this.router.navigate(['salons/myBookings']);\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark\" style=\"background-color: black;\">\n    <a class=\"navbar-brand\" routerLink=\"/\">\n        <img src=\"https://cdn0.iconfinder.com/data/icons/barber-shop-19/64/haircut_barber_hairstyle_salon_scissors_man-512.png\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\n        Esalon\n      </a>\n    <!--<a class=\"navbar-brand\" routerLink=\"\">Navbar</a>-->\n\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav ml-auto\">\n        <!--<li class=\"nav-item\">\n          <a class=\"nav-link\" [class.active] = \"home\" routerLink=\"/\" (click)=\"homeActivator()\">Home <span class=\"sr-only\">(current)</span></a>\n        </li>-->\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" routerLink=\"/salons\" (click) = \"navigateToSalons()\">Salons</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" routerLink=\"/salons/myBookings\" (click) = \"navigateToMyBookings()\">My Bookings</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" routerLink=\"/\" (click) = \"endSession()\">Logout</a>\n        </li>\n        <!--\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/signup\" (click) = \"signupActivator()\" [class.active] = \"signup\">Signup</a>\n        </li>-->\n        <!--<li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Dropdown\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n            <a class=\"dropdown-item\" href=\"#\">Action</a>\n            <a class=\"dropdown-item\" href=\"#\">Another action</a>\n            <div class=\"dropdown-divider\"></div>\n            <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n          </div>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link disabled\" href=\"#\">Disabled</a>\n        </li>-->\n      </ul>\n      <!--<form class=\"form-inline my-2 my-lg-0\">\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n        <button class=\"btn btn-outline-light my-2 my-sm-0\" type=\"submit\">Search</button>\n      </form>-->\n    </div>\n  </nav>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainHeaderComponent } from './main-header/main-header.component';\nimport { SessionHeaderComponent } from './session-header/session-header.component';\nimport { LoginComponent } from './Authentication/login/login.component';\nimport { BannerComponent } from './banner/banner.component';\nimport { RegisterComponent } from './Authentication/register/register.component';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SalonsDashboardComponent } from './salons-dashboard/salons-dashboard.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ShopsComponent } from './salons-dashboard/shops/shops.component';\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\nimport { AdminDashBoardComponent } from './admin/admin-dash-board/admin-dash-board.component';\nimport { AdminNavbarComponent } from './admin/admin-navbar/admin-navbar.component';\nimport { AddShopComponent } from './admin/admin-dash-board/add-shop/add-shop.component';\nimport { AddServiceComponent } from './admin/admin-dash-board/add-service/add-service.component';\nimport { AddSlotComponent } from './admin/admin-dash-board/add-slot/add-slot.component';\nimport { GenerateSlotComponent } from './admin/admin-dash-board/generate-slot/generate-slot.component';\nimport { BookSlotComponent } from './salons-dashboard/book-slot/book-slot.component';\nimport { BookingsComponent } from './admin/admin-dash-board/bookings/bookings.component';\nimport { MyBookingsComponent } from './salons-dashboard/my-bookings/my-bookings.component';\nimport { TemporaryComponent } from './temporary/temporary.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainHeaderComponent,\n    SessionHeaderComponent,\n    LoginComponent,\n    BannerComponent,\n    RegisterComponent,\n    SalonsDashboardComponent,\n    NavbarComponent,\n    ShopsComponent,\n    AdminLoginComponent,\n    AdminDashBoardComponent,\n    AdminNavbarComponent,\n    AddShopComponent,\n    AddServiceComponent,\n    AddSlotComponent,\n    GenerateSlotComponent,\n    BookSlotComponent,\n    BookingsComponent,\n    MyBookingsComponent,\n    TemporaryComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<h3 style=\"text-align: center; color: #3E1A6A;\">Service</h3>\n  <form name=\"form\" (ngSubmit) = \"onSubmit()\" >\n    <label for=\"shopId\" style=\"font-weight: bold;\">Select Shop</label>\n            <select class=\"form-control\"  [(ngModel)]=\"serviceDetails._id\" name=\"shopId\" id=\"shopName\">\n                <option *ngFor='let shop of shops' value=\"{{shop._id}}\">{{shop.shopName}}</option>                                  \n            </select>\n    <label>\n      <p class=\"label-txt\">Enter Shop Service</p>\n\n      <input type=\"text\" [(ngModel)] = \"serviceDetails.serviceName\" name = \"service\" id = \"service\" class=\"input\" required = \"required\" autocomplete=\"off\"> \n      \n      <div class=\"line-box\">\n        <div class=\"line\"></div>\n      </div>\n    </label>\n    <label>\n      <p class=\"label-txt\">Enter Service Cost</p>\n\n      <input type=\"number\" [(ngModel)] = \"serviceDetails.serviceCost\" name = \"serviceCost\" id = \"serviceCost\" class=\"input\" required = \"required\" autocomplete=\"off\">  \n      \n      <div class=\"line-box\">\n        <div class=\"line\"></div>\n      </div>\n    </label>\n    <button type=\"submit\">Add</button>\n    <br><br><br><br><br>\n  </form>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Shop } from 'src/app/models/shop.model';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-add-service',\n  templateUrl: './add-service.component.html',\n  styleUrls: ['./add-service.component.css']\n})\nexport class AddServiceComponent implements OnInit {\n  shops : Shop[] | undefined;\n  \n  //form = new FormGroup({\n    //shopService : new FormControl('',Validators.required)\n  //})\n\n  @Input() serviceDetails = {\n    '_id' : '',\n    'serviceName' : '',\n    'serviceCost' : Number,\n  }\n  constructor(private adminService : AdminService) { }\n\n  ngOnInit(): void {\n    this.fetchShops();\n  }\n\n  fetchShops(){\n    this.adminService.getShops().subscribe(data => {\n        this.shops = data;\n    },\n    err =>{\n\n    })\n  }\n\n  onSubmit(){\n      console.log(this.serviceDetails);\n      this.adminService.sendService(this.serviceDetails).subscribe(data =>{\n        alert(\"Service Added Successfully\");\n      } , err => {\n        alert(\"Something Went Wrong.\");\n      });\n  }\n}\n","import { DatePipe } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Shop } from 'src/app/models/shop.model';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-generate-slot',\n  templateUrl: './generate-slot.component.html',\n  styleUrls: ['./generate-slot.component.css'],\n  providers: [DatePipe]\n})\nexport class GenerateSlotComponent implements OnInit {\n\n  date = new Date();\n  minDate : string | null | undefined;\n\n  constructor(private adminService : AdminService,private datePipe : DatePipe) { \n\n  }\n\n  ngOnInit(): void {\n    this.fetchShops();\n    console.log(this.minDate);\n    this.minDate=this.datePipe.transform(this.date, 'yyyy-MM-dd');\n  }\n\n  shops : Shop[] | undefined;\n  @Input() slotDetails = {\n    'shopId' : '',\n    'date' : ''\n  }\n\n  fetchShops(){\n    this.adminService.getShops().subscribe(data => {\n        this.shops = data;\n    },\n    err =>{\n        console.log(\"Error in Fetching Shops\");\n    })\n  }\n\n  onSubmit(){\n     this.adminService.generateSlot(this.slotDetails).subscribe(data =>{\n        alert(\"Slots Generated Successfully\");\n      } , err => {\n        alert(\"Something Went Wrong.\");\n      });\n  }\n}\n","<h3 style=\"text-align: center; color: #3E1A6A;\">Generate Slot</h3>\n<form name=\"form\" (ngSubmit) = \"onSubmit()\">\n    <label for=\"shopId\" style=\"font-weight: bold;\">Select Shop</label>\n            <select class=\"form-control\"  [(ngModel)]=\"slotDetails.shopId\" name=\"shopId\" id=\"shopName\">\n                <option *ngFor='let shop of shops' value=\"{{shop._id}}\">{{shop.shopName}}</option>                                  \n            </select>\n      <label for=\"date\" style=\"font-weight: bold;\">Select Date</label>\n      <input type=\"date\" [(ngModel)] = \"slotDetails.date\" id=\"date\" name=\"date\" min=\"{{minDate}}\"required=\"required\">\n      <br><br><br>\n    <button type=\"submit\">Add</button>\n    <br><br><br><br><br><br>\n  </form>","<app-main-header *ngIf = \"!show\"></app-main-header>\n<app-session-header *ngIf = \"show\"></app-session-header>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n  show !: boolean;\n  ngOnInit(): void {\n    this.checkSession();\n  }\n\n  checkSession(){\n    console.log(\"home compoennt\");\n    if(sessionStorage.getItem(\"email\") != null)\n      this.show = true;\n    else\n      this.show = false;\n  }\n}\n","<div style=\"background-color: white;\">\n<div class=\"container\" style=\"padding: 10px;\">\n<table class=\"table\">\n    <thead class=\"thead-dark\">\n      <tr>\n        <th scope=\"col\">BookingId</th>\n        <th scope=\"col\">Email</th>\n        <th scope=\"col\">Shop Name</th>\n        <th scope=\"col\">Date</th>\n        <th scope=\"col\">Time</th>\n        <th scope=\"col\">Services</th>\n        <th scope=\"col\">Amount</th>\n      </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let booking of book\">\n            <td> {{booking._id}}</td>\n            <td>{{booking.userEmail}}</td>\n            <td >{{booking.shopName}}</td>\n            <td>{{booking.date}}</td>\n            <td>{{booking.time}}</td>\n            <td>\n            <p *ngFor=\"let s of booking.service\">{{s}}</p></td>\n            <td>{{booking.totalCost}}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Booking } from 'src/app/models/booking.model';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-bookings',\n  templateUrl: './bookings.component.html',\n  styleUrls: ['./bookings.component.css']\n})\nexport class BookingsComponent implements OnInit {\n\n  book : Booking[];\n\n  constructor(private adminService : AdminService) { }\n  ngOnInit(): void {\n    this.fetchBookings();\n  }\n  fetchBookings(){\n    this.adminService.fetchBookings().subscribe(data=>{\n            this.book = data;\n    },err=>{\n        \n    })\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/classes/user';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  user = new User();\n  \n  @Input() confirmPassword : string = \"\";\n\n\n\n  constructor(private serviceObject : UserService,private router : Router) { }\n\n  ngOnInit(): void {\n    this.checkSession();\n  }\n\n  public register(){\n    this.serviceObject.registerService(this.user).subscribe(data => {\n              alert(\"You Have Signed Up Successfully\");\n              this.router.navigate(['login']);\n            },\n    err =>{\n          alert(\"Something Went Wrong\");\n    });\n  }\n  public checkSession(){\n    if(sessionStorage.getItem(\"email\") != null){\n      this.router.navigate(['']);\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n    <div class=\"forms-container\">\n      <div class=\"signin-signup\">\n        <form #registerForm = \"ngForm\" (ngSubmit) = \"register()\"class=\"sign-in-form\" autocomplete=\"off\">\n          <h2 class=\"title\">Sign up</h2>\n          <div class=\"input-field\">\n            <i class=\"fas fa-user\"></i>\n            <input autocomplete=\"off\" type=\"text\" placeholder=\"Name\" #userName = \"ngModel\" name = \"userName\" [(ngModel)] = \"user.userName\" required/>\n          </div>\n          <small class=\"text-danger\" [class.d-none] = \"userName.valid || userName.untouched\">Enter a Valid Name</small>\n          <div class=\"input-field\">\n            <i class=\"fas fa-envelope\"></i>\n            <input autocomplete=\"off\" type=\"email\" placeholder=\"email\" #email = \"ngModel\" [(ngModel)] = \"user.userEmail\"  name = \"email\" pattern = \"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" required/>\n          </div>\n          <small class=\"text-danger\" [class.d-none] = \"email.valid || email.untouched\">Enter a Valid Email</small>\n          <div class=\"input-field\">\n            <i class=\"fas fa-lock\"></i>\n            <input type=\"password\" placeholder=\"Password\" name=\"password\" #password = \"ngModel\" [(ngModel)] = \"user.userPassword\" required pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,20}$\"/>\n          </div>\n          <small class=\"text-danger\" [class.d-none] = \" password.valid || password.untouched\">It must be of Length 8 containing uppercase,lowercase,number and a symbol</small>\n          <div class=\"input-field\">\n            <i class=\"fas fa-lock\"></i>\n            <input type=\"password\" placeholder=\"Confirm Password\" name=\"confirmPassword\" #confirmPassword = \"ngModel\" [(ngModel)] = \"user.userPassword\" required pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,20}$\"/>\n          </div>\n          <small class=\"text-danger\" [class.d-none] = \" (confirmPassword === password) || confirmPassword.untouched\">Password doesn't match</small>\n          <div class=\"input-field\">\n            <i class=\"fas fa-mobile\"></i>\n            <input autocomplete=\"off\" type=\"text\" placeholder=\"Mobile\" name=\"mobileNumber\" [(ngModel)] = \"user.userMobileNum\" #mobile = \"ngModel\" required pattern=\"[0-9]{10}\" required/>\n          </div>\n          <small class=\"text-danger\" [class.d-none] = \"mobile.valid || mobile.untouched\">Enter a valid Mobile Number</small>\n          <input type=\"submit\" [disabled]=\"!registerForm.valid\" class=\"btn solid\"/>\n          <p class=\"social-text\">Or Sign in with</p>\n          <div class=\"social-media\">\n            <a href=\"#\" class=\"social-icon\">\n              <i class=\"fab fa-google\"></i>\n            </a>\n            <!-- <a href=\"#\" class=\"social-icon\">\n              <i class=\"fab fa-facebook-f\"></i>\n            </a>\n            <a href=\"#\" class=\"social-icon\">\n              <i class=\"fab fa-twitter\"></i>\n            </a>\n            \n            <a href=\"#\" class=\"social-icon\">\n              <i class=\"fab fa-linkedin-in\"></i>\n            </a> -->\n          </div>\n        </form>\n        \n      </div>\n    </div>\n    \n    <div class=\"panels-container\">\n      <div class=\"panel left-panel\">\n        <div class=\"content\">\n          <h3>One of Us ?</h3>\n          <p>\n            Already have an Account Just Click and enter you Credentials\n          </p>\n          <button class=\"btn transparent\" id=\"sign-up-btn\" routerLink=\"/login\">\n            Sign in\n          </button>\n        </div>\n        <!--<img src=\"img/log.svg\" class=\"image\" alt=\"\" />-->\n      </div>\n      \n    </div>\n    </div>\n    ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-salons-dashboard',\n  templateUrl: './salons-dashboard.component.html',\n  styleUrls: ['./salons-dashboard.component.css']\n})\nexport class SalonsDashboardComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n    this.checkLogin();\n  }\n\n  checkLogin(){\n      if(sessionStorage.getItem(\"email\") == null){\n        this.router.navigate(['']);\n      }\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n","export class Booking {\n    _id : String;\n    userEmail : String;\n    shopId : String;\n    shopName : String;\n    date : String;\n    slotId : String;\n    time : String;\n    service : String[] = [];\n    totalCost : number;\n}","import { Injectable } from '@angular/core';\nimport {User} from '../classes/user';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Shop } from '../models/shop.model';\nimport { Booking } from '../models/booking.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  //http : HttpClient;\n\n  constructor( private _http : HttpClient) { }\n\n  connectionUrl = \"http://18.119.13.221:7000/user\"\n  public loginService(user : User):Observable<any>{\n    return this._http.post<any>(this.connectionUrl+\"/login\",user);\n  }\n  public registerService(user : User):Observable<any>{\n    console.log(\"Request Send\");\n    return this._http.post<any>(this.connectionUrl + \"/signup\",user);\n  }\n\n  public getShops():Observable<any>{\n    return this._http.get<any>(this.connectionUrl + \"/getShops\");\n  }\n  public getShop(sId : {shopId : String}):Observable<any>{\n    return this._http.post<any>(this.connectionUrl + \"/getShop\",sId);\n  }\n  public getSlots(shop : {shopId : String}):Observable<any>{\n    return this._http.post<any>(this.connectionUrl + \"/getSlots\",shop);\n  }\n\n  public bookSlot(bookingDetails : Booking):Observable<any>{\n    return this._http.post<any>(this.connectionUrl+\"/bookSlot\",bookingDetails);\n  }\n\n  public fetchBookings(email : any):Observable<any>{\n      return this._http.post<any>(this.connectionUrl + \"/getBookingByEmail\",email);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddServiceComponent } from './admin/admin-dash-board/add-service/add-service.component';\nimport { AddShopComponent } from './admin/admin-dash-board/add-shop/add-shop.component';\nimport { AddSlotComponent } from './admin/admin-dash-board/add-slot/add-slot.component';\nimport { AdminDashBoardComponent } from './admin/admin-dash-board/admin-dash-board.component';\nimport { BookingsComponent } from './admin/admin-dash-board/bookings/bookings.component';\nimport { GenerateSlotComponent } from './admin/admin-dash-board/generate-slot/generate-slot.component';\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\nimport { LoginComponent } from './Authentication/login/login.component';\nimport { RegisterComponent } from './Authentication/register/register.component';\nimport { BannerComponent } from './banner/banner.component';\nimport { BookSlotComponent } from './salons-dashboard/book-slot/book-slot.component';\nimport { MyBookingsComponent } from './salons-dashboard/my-bookings/my-bookings.component';\nimport { SalonsDashboardComponent } from './salons-dashboard/salons-dashboard.component';\nimport { ShopsComponent } from './salons-dashboard/shops/shops.component';\n\nconst routes: Routes = [\n  {path:'login',component:LoginComponent},\n  {path:'signup',component:RegisterComponent},\n  {path:'',component:BannerComponent},\n  {path:'salons',component:SalonsDashboardComponent,\n children:[\n    {path:'',component:ShopsComponent},\n    {path:'bookSlot/:shopId',component:BookSlotComponent},\n    {path:'myBookings',component:MyBookingsComponent}\n  ]},\n  {path:'admin',component:AdminDashBoardComponent,\n  children:[\n    {path:'addShop',component:AddShopComponent},\n    {path:'addSlot',component:AddSlotComponent},\n    {path:'addService',component:AddServiceComponent},\n    {path:'generateSlot',component:GenerateSlotComponent},\n    {path:'bookings',component:BookingsComponent},\n    {path:'',component:BookingsComponent},\n  ]\n  },\n  {path:'adminLogin',component:AdminLoginComponent}\n\n  //{path:'**',component:BannerComponent}*/\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { ValueConverter } from '@angular/compiler/src/render3/view/template';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { element } from 'protractor';\nimport { Booking } from 'src/app/models/booking.model';\nimport { Shop } from 'src/app/models/shop.model';\nimport { Slot } from 'src/app/models/slot.model';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-book-slot',\n  templateUrl: './book-slot.component.html',\n  styleUrls: ['./book-slot.component.css']\n})\nexport class BookSlotComponent implements OnInit {\n\n  shopId = this.actRoute.snapshot.params['shopId'];\n\n  slots : Slot[];\n  shops : Shop[];\n  book = new Booking();\n  popUpMessage ='';\n  popUpMessageStatus = false;\n  bookingConfirmation = false;\n\n  constructor(private actRoute :ActivatedRoute,private service : UserService,private router : Router) { }\n\n  ngOnInit(): void {\n    this.fetchShop();\n    this.fetchSlot();  \n  }\n\n  fetchShop(){\n    var sId = JSON.parse(JSON.stringify({shopId : this.shopId}));\n    this.service.getShop(sId).subscribe(data=>{\n        this.shops = data;\n    },errr=>{\n      console.log(\"Error in fetching shop\");\n    })\n  }\n\n  fetchSlot(){\n      var sId = JSON.parse(JSON.stringify({shopId : this.shopId}));\n      this.service.getSlots(sId).subscribe(data =>{\n          this.slots = data;\n      },\n      err =>{\n        console.log(\"Error in Fetch Slot\"+err);\n      });\n  }\n\n  onSubmit(){\n      this.book.service = this.clickedServices();\n      console.log(this.book.service);\n      if(this.book.date == null){\n        this.popUpMessage = \"Please Select Date\";\n        this.popUpMessageStatus = true;\n      }\n      else if(this.book.service.length == 0){\n        this.popUpMessage = \"Please Select Service\";\n        this.popUpMessageStatus = true;\n      }\n      else if(this.book.slotId == null){\n        this.popUpMessage = \"Please Select Time\";\n        this.popUpMessageStatus = true;\n      }\n      else{\n        this.popUpMessageStatus = false;\n        this.slots.forEach(element=>{\n          if(this.book.date == element.date){\n            element.slots?.forEach(value => {\n                if(this.book.slotId == value._id){\n                  this.book.time = value.slotId;\n                }\n            });\n          }\n        });\n        this.bookingConfirmation = true;\n      }\n  }\n  \n  clickedServices(){\n      var services : String[] = [];\n      this.book.totalCost = 0;\n      this.shops[0].shopServices.forEach( value => {\n        if(value.isSelect){\n          services.push(value.serviceName);\n          this.book.totalCost = Number(this.book.totalCost) + Number(value.servicePrice);\n        }\n      });\n      return services\n  }\n\n  confirmBooking(){\n    this.book.shopId = this.shopId;\n    this.book.shopName = this.shops[0].shopName;\n    this.book.userEmail = String(sessionStorage.getItem(\"email\"));\n    this.service.bookSlot(this.book).subscribe(data =>{\n      alert(\"Booking Confirmed\");\n      this.router.navigate(['salons/myBookings']);\n    },\n    err => {\n      alert(\"Something Went Wrong\");\n    }\n    )\n  }\n  cancelBooking(){\n    this.bookingConfirmation = false;\n  }\n}\n","<div class=\"container\">\n    <div *ngIf = \"!bookingConfirmation\">\n    <div class=\"alert alert-danger\" role=\"alert\" style=\"text-align: center;\" *ngIf=\"popUpMessageStatus\">\n        <strong>{{popUpMessage}}</strong>        \n      </div>\n    <div *ngFor=\"let shop of shops\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-6\">\n                        <img src={{shop.shopImage}} class=\"rounded float-right\" width=\"100px\" height=\"150px\"alt=\"...\">\n                      </div>\n                    <div class=\"col-sm-6\">\n                        <div class=\"card-body text-left\">\n                          <h5 class=\"card-title\">{{shop.shopName}}</h5>\n                          <p class=\"card-text\">{{shop.shopAddress}}</p>\n                        </div>\n                    </div>\n                </div>\n                    <div class=\"col-md-12\">\n                        <h4 class=\"m-2\">Select Date</h4>\n                        <div class=\"row border \">\n                            <div class=\"col-2 m-1 pt-3 pb-0\"  *ngFor=\"let s of slots\" >       \n                                <input type=\"radio\"  class=\"btn-check\" name=\"date\" value = \"{{s.date}}\" id=\"{{s._id}}\" [(ngModel)]=\"book.date\" autocomplete=\"off\">\n                                <label id = \"date\" class=\"btn btn-outline-dark\" for=\"{{s._id}}\">{{s.date}}</label>\n                            </div>\n                        </div>\n                    </div>\n                    <h4 style=\"text-align: center;\">Select Service</h4>\n                    <div style=\"text-align: center\">\n                        <div class=\"row border \">\n                            <div class=\"col-3 m-0 pt-1 pb-2\" *ngFor=\"let service of shop.shopServices\"> \n                                <input type=\"checkbox\" id=\"{{service._id}}\" [(ngModel)]=\"service.isSelect\"  name=\"{{service.serviceName}}\" value=\"{{service.serviceName}}\">\n                                <label id=\"service\" class=\"btn btn-outline-secondary\" for=\"{{service._id}}\">{{service.serviceName}} | ₹ {{service.servicePrice}}</label><br>\n                            </div>\n                        </div>\n                    </div>\n\n                    <h4 style=\"text-align: center;\">Select Time Slot</h4>\n                    <div *ngFor=\"let slot of slots\">\n                        <div *ngIf = \"slot.date == book.date\">\n                            <div class=\"row border\">\n                                <div class=\"col-2 m-1 pt-0 pb-0\" *ngFor=\"let t of slot.slots\">\n                                    <div *ngIf=\"!t.status\">\n                                        <input type=\"radio\"  class=\"btn-check\" name=\"time\" value=\"{{t._id}}\" id=\"{{t._id}}\" [(ngModel)]=\"book.slotId\" autocomplete=\"off\">\n                                        <label id = \"slot\"  class=\"btn btn-outline-secondary\" for=\"{{t._id}}\">{{t.slotId}}</label>\n                                    </div>\n                                    <div *ngIf=\"t.status\">\n                                        <input type=\"radio\" disabled={{t.status}} class=\"btn-check\" name=\"time\" value=\"{{t._id}}\" id=\"{{t._id}}\" [(ngModel)]=\"book.slotId\" autocomplete=\"off\">\n                                        <label id = \"slot\"  class=\"btn btn-outline-danger\" for=\"{{t._id}}\">{{t.slotId}}</label>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"text-center\" >\n                        <button class=\"btn btn-outline-success\" style=\"margin-right: 10px;\" (click)=\"onSubmit()\">Book</button>\n                        <input class=\"btn btn-outline-info\" type=\"reset\">\n                    </div>\n                    \n            </div>\n          </div>\n        \n    </div>\n</div>\n<div *ngIf = \"bookingConfirmation\" style=\"margin-top: 10px;margin-left: 370px;\">\n    <div *ngFor=\"let shop of shops\">\n        <div class=\"card\" style=\"width: 18rem;\">\n            <img class=\"card-img-top\" src=\"{{shop.shopImage}}\" width=\"40px\" height=\"200px\" alt=\"Card image cap\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">{{shop.shopName}}</h5>\n              <p class=\"card-text\">{{shop.shopAddress}}</p>\n            </div>\n            <ul class=\"list-group list-group-flush\">\n              <li class=\"list-group-item\">Date  : {{book.date}}</li>\n              <li class=\"list-group-item\">Time : {{book.time}}</li>\n              <li class=\"list-group-item\">Service : \n                  <p style=\"text-align: center;\" *ngFor=\"let service of book.service\">\n                {{service}}\n            </p></li>\n            <li class=\"list-group-item\">Total Cost : ₹ {{book.totalCost}}</li>\n            </ul>\n            <div class=\"card-body\">\n                <button style=\"margin-left: 30px;\" class=\"btn btn-outline-success\" (click) = \"confirmBooking()\">Confirm</button>\n                <button style=\"margin-left: 35px;\" class=\"btn btn-outline-danger\" (click) = \"cancelBooking()\">Cancel</button>\n            </div>\n          </div>\n    </div>\n</div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}